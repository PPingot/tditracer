#!/usr/bin/env python

import sys
import re
from datetime import datetime


TASKS  = 0
QUEUES = 3
EVENTS = 4
NOTES  = 7


tasksnames = []
queuesnames = []
eventsnames = []
notesnames = []

offset_nsec = 0

first_tstamp = 0


def addnote (evt):

   global notesnames
   global offset_sec
   global offset_nsec


   evtwords = evt.split()

   if offset_nsec == 0:
      offset_nsec = int(evtwords[0])
   else:
      if int(evtwords[0]) < offset_nsec:
         offset_nsec = int(evtwords[0])


   if evtwords[3] not in notesnames:

      notesnames.append(evtwords[3])
      print('NAM ' + str(NOTES) + ' %d %s' %((NOTES * 1000 + notesnames.index(evtwords[3])) , evtwords[3]))


   print('OCC ' + str(NOTES) + ' %d %d' %((NOTES * 1000 + notesnames.index(evtwords[3])), int(evtwords[0]) - offset_nsec + first_tstamp))
   print('DSC 0 0 %s' % evtwords[4])


def addtask (evt):

   global tasksnames
   global offset_sec
   global offset_nsec


   evtwords = evt.split()


   if offset_nsec == 0:
      offset_nsec = int(evtwords[0])
   else:
      if int(evtwords[0]) < offset_nsec:
         offset_nsec = int(evtwords[0])


   if evtwords[3] not in tasksnames:

      tasksnames.append(evtwords[3])
      print('NAM ' + str(TASKS) + ' %d %s' %((TASKS * 1000 + tasksnames.index(evtwords[3])) , evtwords[3]))


   print(evtwords[2] + ' ' + str(TASKS) + ' %d %d' %((TASKS * 1000 + tasksnames.index(evtwords[3])), int(evtwords[0]) - offset_nsec + first_tstamp))
   print('DSC 0 0 %s' % evtwords[4])


def addevent (evt):

   global eventsnames
   global offset_sec
   global offset_nsec


   evtwords = evt.split()


   if offset_nsec == 0:
      offset_nsec = int(evtwords[0])
   else:
      if int(evtwords[0]) < offset_nsec:
         offset_nsec = int(evtwords[0])


   if evtwords[3] not in eventsnames:

      eventsnames.append(evtwords[3])
      print('NAM ' + str(EVENTS) + ' %d %s' %((EVENTS * 1000 + eventsnames.index(evtwords[3])) , evtwords[3]))


   print('STA' + ' ' + str(EVENTS) + ' %d %d' %((EVENTS * 1000 + eventsnames.index(evtwords[3])), int(evtwords[0]) - offset_nsec + first_tstamp))
   print('STO' + ' ' + str(EVENTS) + ' %d %d' %((EVENTS * 1000 + eventsnames.index(evtwords[3])), int(evtwords[0]) - offset_nsec + first_tstamp))
   print('DSC 0 0 %s' % evtwords[4])


def addqueue (evt):

   global queuesnames
   global offset_sec
   global offset_nsec


   evtwords = evt.split()


   if offset_nsec == 0:
      offset_nsec = int(evtwords[0])
   else:
      if int(evtwords[0]) < offset_nsec:
         offset_nsec = int(evtwords[0])


   if evtwords[3] not in queuesnames:

      queuesnames.append(evtwords[3])
      print('NAM ' + str(QUEUES) + ' %d %s' %((QUEUES * 1000 + queuesnames.index(evtwords[3])) , evtwords[3]))


   print(evtwords[2] + ' ' + str(QUEUES) + ' %d %d %s' %((QUEUES * 1000 + queuesnames.index(evtwords[3])), int(evtwords[0]) - offset_nsec + first_tstamp, evtwords[4]))


nams = []  # tdifilename  + ' ' + 0 / 3 / 4 / 7 + ' ' + 0.. / 3000.. / 4000.. / 7000..
evts = []  # epoch-tstamp + ' ' + 0 / 3 / 4 / 7 + ' ' + thenam + ' ' + 'OCC/STA/STO/' + ' ' + 0.. / 3000.. / 4000.. / 7000.. + ' ' + descr

def build(tdifilename):

   global nams
   global evts
   global first_tstamp

   f = open(tdifilename)

   for line in f:
      if line.startswith('END'):
         offset = int(line[4:])


   f.seek(0)

   for line in f:

      if line.startswith('NAM'):

         namwords = line.split()

         nams.append(tdifilename + ' ' + namwords[2] + ' ' + namwords[3])


      if line.startswith('OCC'):

         occwords = line.split()

         tstamp = int(occwords[3])

         if first_tstamp == 0:
            first_tstamp = tstamp


         dscwords = f.next().split()


         for nam in nams:
            namwords = nam.split()

            if namwords[0] == tdifilename:

               if occwords[2] == namwords[1]:

                  thenam = namwords[2]

         evts.append(str(offset + tstamp) + ' ' + occwords[1] + ' ' + 'OCC' + ' ' +  thenam + ' ' + dscwords[3])


      if line.startswith('STA'):

         stawords = line.split()

         tstamp = int(stawords[3])

         if first_tstamp == 0:
            first_tstamp = tstamp


         if int(stawords[1]) == 0: # @T+ STA DSC

            dscwords = f.next().split()

            for nam in nams:
               namwords = nam.split()

               if namwords[0] == tdifilename:

                  if stawords[2] == namwords[1]:

                     thenam = namwords[2]

            evts.append(str(offset + tstamp) + ' ' + stawords[1] + ' ' + 'STA' + ' ' + thenam + ' ' + dscwords[3])


         if int(stawords[1]) == 4: # @E+  STA STO DSC

            stowords = f.next().split()

            dscwords = f.next().split()

            for nam in nams:
               namwords = nam.split()

               if namwords[0] == tdifilename:

                  if stawords[2] == namwords[1]:

                     thenam = namwords[2]

            evts.append(str(offset + tstamp) + ' ' + stawords[1] + ' ' + 'STASTO' + ' ' + thenam + ' ' + dscwords[3])


         if int(stawords[1]) == 3: # ~ STA / STO

            for nam in nams:
               namwords = nam.split()
            
               if namwords[0] == tdifilename:
            
                  if stawords[2] == namwords[1]:
            
                     thenam = namwords[2]

            evts.append(str(offset + tstamp) + ' ' + stawords[1] + ' ' + stawords[0] + ' ' + thenam + ' ' + stawords[4])



      if line.startswith('STO'):

         stowords = line.split()

         tstamp = int(stowords[3])

         if first_tstamp == 0:
            first_tstamp = tstamp


         if int(stowords[1]) == 0: # @T+ STO DSC

            dscwords = f.next().split()

            for nam in nams:
               namwords = nam.split()

               if namwords[0] == tdifilename:

                  if stowords[2] == namwords[1]:

                     thenam = namwords[2]

            evts.append(str(offset + tstamp) + ' ' + stowords[1] + ' ' + 'STO' + ' ' + thenam + ' ' + dscwords[3])


         if int(stowords[1]) == 3: # ~ STA / STO

            for nam in nams:
               namwords = nam.split()

               if namwords[0] == tdifilename:

                  if stowords[2] == namwords[1]:
            
                     thenam = namwords[2]
            
            evts.append(str(offset + tstamp) + ' ' + stowords[1] + ' ' + stowords[0] + ' ' + thenam + ' ' + stowords[4])


   #for evt in evts:
   #   sys.stderr.write(evt[:120] + '\n')

   f.close()



def sortby(x):
    try:
        return int(x.split(' ')[0])
    except ValueError:
        return float('inf')


def main():
   global first_tstamp

   if len(sys.argv) >= 2:

      for tdifilename in sys.argv[1:]:

         build(tdifilename)

      evts.sort(key=sortby)

      print('TIME 1000000000')
      print('SPEED 1000000000')
      print('DNM 0 0 >')

      first_tstamp = 0

      for evt in evts:
         evtwords = evt.split()

         if int(evtwords[1]) == NOTES:
            addnote(evt)

         if int(evtwords[1]) == TASKS:
            addtask(evt)

         if int(evtwords[1]) == EVENTS:
            addevent(evt)

         if int(evtwords[1]) == QUEUES:
            addqueue(evt)


      print('END %d' % (offset_nsec));


   else:

      print("Usage: %s tdifile1 tdifile2..." % sys.argv[0])

if __name__ == "__main__":
   main()
